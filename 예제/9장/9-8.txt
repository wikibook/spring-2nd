<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.BookMapper">
	<!-- 【SELECT】 모든 책을 가져오기 위한 SQL을 정의 -->
	<select id="getAllBooks" resultType="com.example.demo.entity.Book">
		SELECT id, title, author FROM books ORDER BY id
	</select>
	
	<!-- 【SELECT】 특정 ID를 가진 책을 가져오기 위한 SQL을 정의 -->
	<select id="getBookById" resultType="com.example.demo.entity.Book">
		SELECT id, title, author FROM books WHERE id = #{id}
	</select>
	
	<!-- 【INSERT】 새로운 책을 데이터베이스에 추가하는 SQL을 정의 -->
	<insert id="insertBook" parameterType="com.example.demo.entity.Book">
		INSERT INTO books (title, author) VALUES (#{title}, #{author})
	</insert>
	
	<!-- 【UPDATE】 특정 ID를 가진 책의 정보를 업데이트하는 SQL을 정의 -->
	<update id="updateBook" parameterType="com.example.demo.entity.Book">
		UPDATE books SET title = #{title}, author = #{author}
		WHERE id = #{id}
	</update>
	
	<!-- 【DELETE】 특정 ID를 가진 책의 정보를 삭제하는 SQL을 정의 -->
	<delete id="deleteBookById" parameterType="int">
		DELETE FROM books WHERE id = #{id}
	</delete>
</mapper>